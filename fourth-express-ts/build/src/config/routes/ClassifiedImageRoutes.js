"use strict";
const express = require("express");
const ClassifiedImageController = require("./../../controllers/ClassifiedImageController");
const router = express.Router();
const multer = require('multer');
// multer middleware for single upload
// TODO move to controller
// TODO set max upload size
const upload = multer({
    storage: multer.memoryStorage() // TODO read from a temp store instead this can use too much memory
}).single('file');
class ClassifiedImageRoutes {
    constructor() {
        this._classifieImageController = new ClassifiedImageController();
    }
    get routes() {
        const controller = this._classifieImageController;
        router.get('/allClassifiedImages', controller.retrieve);
        router.post('/classifyImage', upload, controller.create, controller.classify);
        router.put('/classifiedImages/:_id', controller.update);
        router.get('/classifiedImages/:_id', controller.findById);
        router.get('/classifiedImages/:_id/image', controller.findImageFileById);
        // router.delete('/flowers/:_id', controller.delete);
        return router;
    }
}
Object.seal(ClassifiedImageRoutes);
module.exports = ClassifiedImageRoutes;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb25maWcvcm91dGVzL0NsYXNzaWZpZWRJbWFnZVJvdXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW9DO0FBQ3BDLDJGQUE0RjtBQUU1RixNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDaEMsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRWpDLHNDQUFzQztBQUN0QywwQkFBMEI7QUFDMUIsMkJBQTJCO0FBQzNCLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUNsQixPQUFPLEVBQUcsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDLG1FQUFtRTtDQUN2RyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBRWxCO0lBR0U7UUFDRSxJQUFJLENBQUMseUJBQXlCLEdBQUcsSUFBSSx5QkFBeUIsRUFBRSxDQUFDO0lBQ25FLENBQUM7SUFDRCxJQUFJLE1BQU07UUFDUixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUM7UUFDbEQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDMUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyw4QkFBOEIsRUFBRSxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUV6RSxxREFBcUQ7UUFFckQsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBRUY7QUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFDbkMsaUJBQVMscUJBQXFCLENBQUMiLCJmaWxlIjoic3JjL2NvbmZpZy9yb3V0ZXMvQ2xhc3NpZmllZEltYWdlUm91dGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5pbXBvcnQgQ2xhc3NpZmllZEltYWdlQ29udHJvbGxlciA9IHJlcXVpcmUoJy4vLi4vLi4vY29udHJvbGxlcnMvQ2xhc3NpZmllZEltYWdlQ29udHJvbGxlcicpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5cbi8vIG11bHRlciBtaWRkbGV3YXJlIGZvciBzaW5nbGUgdXBsb2FkXG4vLyBUT0RPIG1vdmUgdG8gY29udHJvbGxlclxuLy8gVE9ETyBzZXQgbWF4IHVwbG9hZCBzaXplXG5jb25zdCB1cGxvYWQgPSBtdWx0ZXIoe1xuICAgIHN0b3JhZ2UgOiBtdWx0ZXIubWVtb3J5U3RvcmFnZSgpIC8vIFRPRE8gcmVhZCBmcm9tIGEgdGVtcCBzdG9yZSBpbnN0ZWFkIHRoaXMgY2FuIHVzZSB0b28gbXVjaCBtZW1vcnlcbn0pLnNpbmdsZSgnZmlsZScpO1xuXG5jbGFzcyBDbGFzc2lmaWVkSW1hZ2VSb3V0ZXMge1xuICBwcml2YXRlIF9jbGFzc2lmaWVJbWFnZUNvbnRyb2xsZXI6IENsYXNzaWZpZWRJbWFnZUNvbnRyb2xsZXI7XG5cbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMuX2NsYXNzaWZpZUltYWdlQ29udHJvbGxlciA9IG5ldyBDbGFzc2lmaWVkSW1hZ2VDb250cm9sbGVyKCk7XG4gIH1cbiAgZ2V0IHJvdXRlcyAoKSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IHRoaXMuX2NsYXNzaWZpZUltYWdlQ29udHJvbGxlcjtcbiAgICByb3V0ZXIuZ2V0KCcvYWxsQ2xhc3NpZmllZEltYWdlcycsIGNvbnRyb2xsZXIucmV0cmlldmUpO1xuICAgIHJvdXRlci5wb3N0KCcvY2xhc3NpZnlJbWFnZScsIHVwbG9hZCwgY29udHJvbGxlci5jcmVhdGUsIGNvbnRyb2xsZXIuY2xhc3NpZnkpO1xuICAgIHJvdXRlci5wdXQoJy9jbGFzc2lmaWVkSW1hZ2VzLzpfaWQnLCBjb250cm9sbGVyLnVwZGF0ZSk7XG4gICAgcm91dGVyLmdldCgnL2NsYXNzaWZpZWRJbWFnZXMvOl9pZCcsIGNvbnRyb2xsZXIuZmluZEJ5SWQpO1xuICAgIHJvdXRlci5nZXQoJy9jbGFzc2lmaWVkSW1hZ2VzLzpfaWQvaW1hZ2UnLCBjb250cm9sbGVyLmZpbmRJbWFnZUZpbGVCeUlkKTtcblxuICAgIC8vIHJvdXRlci5kZWxldGUoJy9mbG93ZXJzLzpfaWQnLCBjb250cm9sbGVyLmRlbGV0ZSk7XG5cbiAgICByZXR1cm4gcm91dGVyO1xuICB9XG5cbn1cblxuT2JqZWN0LnNlYWwoQ2xhc3NpZmllZEltYWdlUm91dGVzKTtcbmV4cG9ydCA9IENsYXNzaWZpZWRJbWFnZVJvdXRlcztcbiJdfQ==
